#!/usr/bin/env bash

# Upgrade a running CF using the current chart in output/helm. Assumes
# that only one revision is currently running. If more than one runs
# the last per helm's sorting order is chosen. (See **)

set -o errexit -o nounset

NAMESPACE="${NAMESPACE:-cf}"
UAA_NAMESPACE="${UAA_NAMESPACE:-uaa}"
CF_CHART="${CF_CHART:-output/helm}"

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}
cd "${GIT_ROOT}"

. make/include/secrets

# Argument? (**)
# Setting the helm name to the namespace makes cleanup easier
RELEASE=${NAMESPACE}
echo Upgrading ${NAMESPACE} release \"${RELEASE}\" ...

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run start
stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::upgrade start

: "${STORAGE_CLASS:=$(kubectl get storageclass 2>/dev/null | awk '/(default)/ { print $1 ; exit }')}"
: "${DOMAIN:=cf-dev.io}"
: "${TCP_DOMAIN:=tcp.${DOMAIN}}"
: "${UAA_HOST:=uaa.${DOMAIN}}"
: "${INSECURE_DOCKER_REGISTRIES:=\"insecure-registry.${DOMAIN}:20005\"}"

UAA_CA_CERT="$(get_secret "${UAA_NAMESPACE}" "uaa" "INTERNAL_CA_CERT")"

helm_args=(
    --namespace "${NAMESPACE}"
    --values "bin/settings.yaml" \
    --set "env.DOMAIN=${DOMAIN}"
    --set "env.TCP_DOMAIN=${TCP_DOMAIN}"
    --set "env.UAA_HOST=${UAA_HOST}"
    --set "env.INSECURE_DOCKER_REGISTRIES=${INSECURE_DOCKER_REGISTRIES}"
    --set "secrets.UAA_CA_CERT=${UAA_CA_CERT}"
    --set "kube.storage_class.persistent=${STORAGE_CLASS}"
)

# The extra IP address for `kube.external_ips` is to ensure that we can
# create services binding to multiple addresses correctly.  It points at
# an address that shouldn't exist in real life.
helm_args+=(
    --set "kube.external_ips[0]=192.0.2.42"
    --set "kube.external_ips[1]=$(getent hosts "${DOMAIN}" | awk 'NR=1{print $1}')"
)

# Force rotate secrets
if [ -n "${SCF_SECRETS_GENERATION_COUNTER:-}" ] ; then
    helm_args+=(
        --set "kube.secrets_generation_counter=${SCF_SECRETS_GENERATION_COUNTER}"
    )
fi

if [ -n "${SCF_ENABLE_AUTOSCALER:-}" ] ; then
    for f in "${CF_CHART}"/templates/autoscaler-* ; do
        f="${f##*/}" # strip leading directories
        f="${f%.*}"  # strip file extension
        helm_args+=( --set "sizing.${f//-/_}.count=1" )
    done
fi

if [ -n "${SCF_ENABLE_CREDHUB:-}" ] ; then
    helm_args+=( --set "sizing.credhub_user.count=1" )
fi

helm upgrade "${RELEASE}" "${CF_CHART}" "${helm_args[@]}" "$@"

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::upgrade end
stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run 'done'
