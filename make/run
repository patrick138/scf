#!/usr/bin/env bash

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}
cd "${GIT_ROOT}"

. make/include/secrets

NAMESPACE="${NAMESPACE:-cf}"
UAA_NAMESPACE="${UAA_NAMESPACE:-uaa}"
CF_CHART="${CF_CHART:-output/helm}"

has_namespace() {
    kubectl get namespace --output=name "${NAMESPACE}" >/dev/null 2>/dev/null
}

has_internal_ca() {
    test "$(get_secret "${UAA_NAMESPACE}" "uaa" "INTERNAL_CA_CERT")" != ""
}

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run start

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::namespace start
if has_namespace ; then
    kubectl delete namespace "${NAMESPACE}"
fi

printf "Waiting for namespace %s to be deleted...\n" "${NAMESPACE}"
while has_namespace ; do
    sleep 1
done

kubectl create namespace "${NAMESPACE}"
stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::namespace end

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::ca-cert start

printf "Waiting for uaa cert to be generated by the uaa chart...\n"
until has_internal_ca ; do
    sleep 1
done

CA_CERT="$(get_secret "${UAA_NAMESPACE}" "uaa" "INTERNAL_CA_CERT")"

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::ca-cert end

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::create start

kubectl get storageclass | grep --silent '(default)' 2>/dev/null || {
    perl -p -e 's@storage.k8s.io/v1beta1@storage.k8s.io/v1@g' \
        "${GIT_ROOT}/src/uaa-fissile-release/kube-test/storage-class-host-path.yml" | \
    kubectl create -f -
}

: "${STORAGE_CLASS:=$(kubectl get storageclass 2>/dev/null | awk '/(default)/ { print $1 ; exit }')}"
: "${DOMAIN:=cf-dev.io}"
: "${TCP_DOMAIN:=tcp.${DOMAIN}}"
: "${UAA_HOST:=uaa.${DOMAIN}}"
: "${INSECURE_DOCKER_REGISTRIES:=\"insecure-registry.${DOMAIN}:20005\"}"

helm_args=(
    --name "${NAMESPACE}"
    --namespace "${NAMESPACE}"
    --values "bin/settings.yaml"
    --set "env.DOMAIN=${DOMAIN}"
    --set "env.TCP_DOMAIN=${TCP_DOMAIN}"
    --set "env.UAA_HOST=${UAA_HOST}"
    --set "env.INSECURE_DOCKER_REGISTRIES=${INSECURE_DOCKER_REGISTRIES}"
    --set "secrets.UAA_CA_CERT=${CA_CERT}"
    --set "kube.storage_class.persistent=${STORAGE_CLASS}"
)

# The extra IP address for `kube.external_ips` is to ensure that we can
# create services binding to multiple addresses correctly.  It points at
# an address that shouldn't exist in real life.
helm_args+=(
    --set "kube.external_ips[0]=192.0.2.42"
    --set "kube.external_ips[1]=$(getent hosts "${DOMAIN}" | awk 'NR=1{print $1}')"
)

helm install "${CF_CHART}" "${helm_args[@]}" "$@"

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run::create end

stampy "${GIT_ROOT}/scf_metrics.csv" "$0" make-run 'done'
